//
// WARNING: DO NOT EDIT THIS FILE
//   This file has been generated from the target's JSON hardware description
//

typedef struct {
    uint32_t bit; // bit in uint32_t
    uint32_t xor_bit; // for active low/high
    uint32_t key_code_bit;
} mcp_key_map_t;

static mcp_key_map_t key_mapping[] = {
{% for key in keys %}
    {
        .bit = (1 << (({{ key.gpio }} - 1) * 8 + {{ key.pin }})),
        {% if key.active_low %}
        .xor_bit = (1 << (({{ key.gpio }} - 1) * 8 + {{ key.pin }})),
        {% else %}
        .xor_bit = 0,
        {% endif %}
        .key_code_bit = (1 << {{ key.key }})
    },
{% endfor %}
};

{% set hw_trims = trims | selectattr('dec', 'defined') | selectattr('inc', 'defined') | list %}
static mcp_key_map_t trim_mapping[] = {
{% for trim in hw_trims %}
    {
        .bit = (1 << (({{ trim.dec.gpio }} - 1) * 8 + {{ trim.dec.pin }})),
        {% if trim.dec.active_low %}
        .xor_bit = (1 << (({{ trim.dec.gpio }} - 1) * 8 + {{ trim.dec.pin }})),
        {% else %}
        .xor_bit = 0,
        {% endif %}
        .key_code_bit = (1 << {{ loop.index0 * 2 }})
    },
    {
        .bit = (1 << (({{ trim.inc.gpio }} - 1) * 8 + {{ trim.inc.pin }})),
        {% if trim.inc.active_low %}
        .xor_bit = (1 << (({{ trim.inc.gpio }} - 1) * 8 + {{ trim.inc.pin }})),
        {% else %}
        .xor_bit = 0,
        {% endif %}
        .key_code_bit = (1 << {{ loop.index0 * 2 + 1 }})
    },
{% endfor %}
};

